services:
  db:
    image: postgres
    container_name: events_challenge
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5332:5432"
    networks:
      - myapp-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  springboot-app:
    build:
      context: .  # Build the image from the current directory where the Dockerfile is
    container_name: springboot-app
    ports:
      - "8080:8080"  # Expose Spring Boot app on port 8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}  # Connect to the 'db' service
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db  # Ensure the database is ready before the Spring Boot app starts
    networks:
      - myapp-network

networks:
  myapp-network:
    driver: bridge

volumes:
  postgres_data:
